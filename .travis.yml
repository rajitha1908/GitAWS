os: 
 - windows
 #- linux

language: cpp

before_install: 
- git config --global user.name rajitha1905
- git config --global user.email rajitha.siripurapu@gmail.com
- echo "${PWD}"
#- sudo apt-get install qdbus qmlscene qt5-default qt5-qmake qtbase5-dev-tools qtchooser qtdeclarative5-dev xbitmaps xterm libqt5svg5-dev qttools5-dev qtscript5-dev qtdeclarative5-folderlistmodel-plugin qtdeclarative5-controls-plugin python-software-properties build-essential g++-4.8 
#- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50

#- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y p7zip-full; fi

#env:
    #- QT_CI_PACKAGES=qt.qt5.5120.gcc_64,qt.qt5.5120.qtwebengine PATH="/home/travis/build/Qt/5.12.0/gcc_64/bin:${PATH}"
  
install:
- pwd
- pushd /c/Users/travis/build/ && mkdir arm-gcc && cd arm-gcc
#- curl -L0 "https://api.bintray.com/content/jfrog/jfrog-cli-go/$latest/jfrog-cli-windows-amd64/jfrog.exe?bt_package=jfrog-cli-windows-amd64"
#- chmod +x jfrog
- curl -fL https://getcli.jfrog.io | sh
- ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USERNAME --interactive=false
- cp /c/Users/travis/build/rajitha1908/GitAWS/folder1.zip ${PWD}
- jar xf folder1.zip
- cd ..
- export PATH="$PATH:${PWD}/arm-gcc"
- ls
- popd
#- capicom.dll --version



script: 
- pwd
- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then ./build.bat; fi
- chmod +x deploy.sh
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./deploy.sh; fi

  
after_success: 
- echo "deployed"
 